#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#
### Package information
string (TOUPPER "${PACKAGE_NAME}" PACKAGE_PREFIX)

#Define cmake install path
if(WIN32 AND NOT CYGWIN)
  set(CONFIG_INSTALL_DIR cmake)
else()
  set(CONFIG_INSTALL_DIR ${CMAKE_INSTALL_LIBDIR}/cmake/${PROJECT_NAME})
endif()
set(CONFIG_INSTALL_DIR ${CONFIG_INSTALL_DIR} CACHE PATH "Installation path for CMake config files")

# Package generators
if(NOT CPACK_GENERATOR)
  # Generate tar.gz
  set(CPACK_GENERATOR "TGZ")
  if (WIN32)
    # On Windows generate zip
    set(CPACK_GENERATOR "ZIP")
  endif()
endif()
set(CPACK_GENERATOR ${CPACK_GENERATOR})
set(CPACK_SOURCE_GENERATOR ${CPACK_GENERATOR})
mark_as_advanced(CPACK_GENERATOR CPACK_SOURCE_GENERATOR)

# Package information
set(CPACK_PACKAGE_NAME "${PACKAGE_NAME}")
set(CPACK_PACKAGE_DESCRIPTION "${PACKAGE_DESCRIPTION}")
set(CPACK_PACKAGE_VENDOR "${PACKAGE_VENDOR}")
mark_as_advanced(CPACK_PACKAGE_NAME CPACK_PACKAGE_DESCRIPTION CPACK_PACKAGE_VENDOR)

# Package versions
set(CPACK_PACKAGE_VERSION_MAJOR ${PACKAGE_VERSION_MAJOR})
set(CPACK_PACKAGE_VERSION_MINOR ${PACKAGE_VERSION_MINOR})
set(CPACK_PACKAGE_VERSION_PATCH ${PACKAGE_VERSION_PATCH})
mark_as_advanced(CPACK_PACKAGE_VERSION_MAJOR CPACK_PACKAGE_VERSION_MINOR CPACK_PACKAGE_VERSION_PATCH)
set(CPACK_PACKAGE_VERSION ${PACKAGE_VERSION})
mark_as_advanced(CPACK_PACKAGE_VERSION)

# Package documentation
set(CPACK_RESOURCE_FILE_WELCOME "${CMAKE_SOURCE_DIR}/README.md")
set(CPACK_RESOURCE_FILE_README "${CMAKE_SOURCE_DIR}/README.md")
set(CPACK_RESOURCE_FILE_LICENSE "${CMAKE_SOURCE_DIR}/LICENSE")
mark_as_advanced(CPACK_RESOURCE_FILE_WELCOME CPACK_RESOURCE_FILE_README CPACK_RESOURCE_FILE_LICENSE)

# Add Cpack support
include(CPack)

# Include/exclude top level directory
set(CPACK_INCLUDE_TOPLEVEL_DIRECTORY TRUE)

# Set packaging path
if (NOT CPACK_OUTPUT_FILE_PREFIX)
  set(CPACK_OUTPUT_FILE_PREFIX "${CMAKE_BINARY_DIR}")
endif()
if (NOT CPACK_PACKAGE_DIRECTORY)
  set(CPACK_PACKAGE_DIRECTORY "${CMAKE_BINARY_DIR}")
endif()

# Set package file name
set (CPACK_PACKAGE_FILE_NAME "${CPACK_PACKAGE_NAME}-${CPACK_PACKAGE_VERSION}-${CPACK_SYSTEM_NAME}")
if (CPACK_PACKAGE_ARCHITECTURE)
  set(CPACK_PACKAGE_FILE_NAME "${CPACK_PACKAGE_FILE_NAME}-${CPACK_PACKAGE_ARCHITECTURE}")
endif()
set(CPACK_SOURCE_PACKAGE_FILE_NAME "${CPACK_PACKAGE_FILE_NAME}-src")
file(WRITE "${PROJECT_BINARY_DIR}/package_info.txt" "${CPACK_PACKAGE_FILE_NAME}")

# Install documentation
install(FILES ${CPACK_RESOURCE_FILE_README} DESTINATION .)
install(FILES ${CPACK_RESOURCE_FILE_LICENSE} DESTINATION .)

# Install version number
file(WRITE "${PROJECT_BINARY_DIR}/VERSION" ${PROJECT_VERSION})
install(FILES ${PROJECT_BINARY_DIR}/VERSION DESTINATION .)

#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#