# Dockerfile.powerpc64.ubuntu_latest

FROM powerpc64/ubuntu:latest

# Install system dependencies
RUN apt-get -qq update \
    && apt-get -qq install -y --no-install-recommends \
        software-properties-common \
        gcc-powerpc64-linux-gnu \
        g++-powerpc64-linux-gnu \
        binutils-powerpc64-linux-gnu \
        python3 \
        python3-pip \
        make \
    && rm -rf /var/lib/apt/lists/* \
    && pip3 install -q --no-cache-dir conan conan-package-tools cmake --upgrade \
    && conan profile new default --detect \
    && conan profile update settings.compiler.libcxx=libstdc++11 default \
    && conan profile new ppc64 --detect \
    && conan profile update settings.arch=powerpc64 ppc64 \
    && conan profile update settings.compiler.libcxx=libstdc++11 ppc64 \
    && conan profile update env.CC=/usr/bin/powerpc64-linux-gnu-gcc ppc64 \
    && conan profile update env.CXX=/usr/bin/powerpc64-linux-gnu-g++ ppc64 \
    && conan profile update env.CMAKE_C_COMPILER=/usr/bin/powerpc64-linux-gnu-gcc ppc64 \
    && conan profile update env.CMAKE_CXX_COMPILER=/usr/bin/powerpc64-linux-gnu-g++ ppc64 \
    && conan profile update env.STRIP=/usr/bin/powerpc64-linux-gnu-strip ppc64 \
    && conan profile update env.AS=/usr/bin/powerpc64-linux-gnu-as ppc64 \
    && conan profile update env.AR=/usr/bin/powerpc64-linux-gnu-ar ppc64 \
    && conan profile update env.LD=/usr/bin/powerpc64-linux-gnu-ld ppc64 \
    && conan profile update env.FC=/usr/bin/powerpc64-linux-gnu-gfortran ppc64 \
    && conan profile update env.GCOV=/usr/bin/powerpc64-linux-gnu-gcov ppc64 \
    && apt-get -qq clean \
    && apt-get -qq autoclean \
    && apt-get -qq autoremove -y \
    && rm -rf /var/lib/apt/lists/*

# Create project workspace
WORKDIR /app
COPY . /app

# Install project dependencies
RUN conan install . -b missing

# Run build
RUN cmake --workflow --fresh --preset ci-linux-ppc64

# Set the default command
CMD ["/bin/bash"]
