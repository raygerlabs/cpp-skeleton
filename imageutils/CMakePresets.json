{
  "version": 6,
  "configurePresets": [
    {
      "name": "dev",
      "hidden": true,
      "displayName": "Developer Mode (Default)",
      "description": "Preset for development activities and debugging",
      "generator": "Ninja",
      "binaryDir": "${sourceDir}/build/Debug",
      "installDir": "${sourceDir}/install/Debug",
      "cacheVariables": {
        "CMAKE_BUILD_TYPE": "Debug",
        "CMAKE_CONFIGURATION_TYPES": "Debug",
        "CMAKE_PREFIX_PATH": "${sourceDir}/build/generators;${sourceDir}/build/Debug/generators",
        "CMAKE_MODULE_PATH": "${sourceDir}/build/generators;${sourceDir}/build/Debug/generators",
        "ENABLE_TESTS": true,
        "ENABLE_EXAMPLES": true
      }
    },
    {
      "name": "ci",
      "hidden": true,
      "displayName": "CI Mode (Default)",
      "description": "Preset for continuous integration",
      "generator": "Ninja",
      "binaryDir": "${sourceDir}/build/Release",
      "installDir": "${sourceDir}/install/Release",
      "cacheVariables": {
        "CMAKE_BUILD_TYPE": "Release",
        "CMAKE_CONFIGURATION_TYPES": "Release",
        "CMAKE_PREFIX_PATH": "${sourceDir}/build/generators;${sourceDir}/build/Release/generators",
        "CMAKE_MODULE_PATH": "${sourceDir}/build/generators;${sourceDir}/build/Release/generators",
        "ENABLE_TESTS": true
      }
    },
    {
      "name": "perf",
      "hidden": true,
      "displayName": "Profiler Mode (Default)",
      "description": "Preset for profiling performance",
      "generator": "Ninja",
      "binaryDir": "${sourceDir}/build/RelWithDebInfo",
      "installDir": "${sourceDir}/install/RelWithDebInfo",
      "cacheVariables": {
        "CMAKE_BUILD_TYPE": "RelWithDebInfo",
        "CMAKE_CONFIGURATION_TYPES": "RelWithDebInfo",
        "CMAKE_PREFIX_PATH": "${sourceDir}/build/generators;${sourceDir}/build/RelWithDebInfo/generators",
        "CMAKE_MODULE_PATH": "${sourceDir}/build/generators;${sourceDir}/build/RelWithDebInfo/generators",
        "ENABLE_BENCHMARKS": true
      }
    },
    {
      "name": "doc",
      "displayName": "API Document Generator",
      "description": "Preset for generating API documentation",
      "generator": "Ninja",
      "binaryDir": "${sourceDir}/build/Release",
      "installDir": "${sourceDir}/install/Release",
      "cacheVariables": {
        "CMAKE_BUILD_TYPE": "Release",
        "CMAKE_CONFIGURATION_TYPES": "Release",
        "CMAKE_PREFIX_PATH": "${sourceDir}/build/generators;${sourceDir}/build/Release/generators",
        "CMAKE_MODULE_PATH": "${sourceDir}/build/generators;${sourceDir}/build/Release/generators",
        "ENABLE_DOCUMENTATION": true
      }
    },
    {
      "name": "asan",
      "hidden": true,
      "displayName": "Address Sanitizer (Default)",
      "description": "Preset for enabling address sanitizer",
      "cacheVariables": {
        "ENABLE_ASAN": true
      }
    },
    {
      "name": "lsan",
      "hidden": true,
      "displayName": "Leak Sanitizer (Default)",
      "description": "Preset for enabling leak sanitizer",
      "cacheVariables": {
        "ENABLE_LSAN": true
      }
    },
    {
      "name": "msan",
      "hidden": true,
      "displayName": "Memory Sanitizer (Default)",
      "description": "Preset for enabling memory sanitizer",
      "cacheVariables": {
        "ENABLE_MSAN": true
      }
    },
    {
      "name": "tsan",
      "hidden": true,
      "displayName": "Thread Sanitizer (Default)",
      "description": "Preset for enabling thread sanitizer",
      "cacheVariables": {
        "ENABLE_TSAN": true
      }
    },
    {
      "name": "ubsan",
      "hidden": true,
      "displayName": "Undefined Sanitizer (Default)",
      "description": "Preset for enabling undefined sanitizer",
      "cacheVariables": {
        "ENABLE_UBSAN": true
      }
    },
    {
      "name": "gcc",
      "displayName": "GNU C/C++",
      "description": "Preset for GNU C/C++ compiler toolchain",
      "hidden": true,
      "toolchainFile": "${sourceDir}/cmake/toolchains/toolchain-gcc.cmake"
    },
    {
      "name": "clang",
      "displayName": "Clang (LLVM) C/C++",
      "description": "Preset for Clang (LLVM) C/C++ compiler toolchain",
      "hidden": true,
      "toolchainFile": "${sourceDir}/cmake/toolchains/toolchain-clang.cmake"
    },
    {
      "name": "msvc",
      "displayName": "Microsoft Visual C/C++",
      "description": "Preset for Microsoft Visual C/C++ compiler toolchain",
      "hidden": true,
      "condition": {
        "type": "equals",
        "lhs": "${hostSystemName}",
        "rhs": "Windows"
      },
      "toolchainFile": "${sourceDir}/cmake/toolchains/toolchain-msvc.cmake"
    },
    {
      "name": "dev-gcc",
      "displayName": "Developer Mode (GNU C/C++)",
      "description": "Preset for development activities and debugging",
      "inherits": [
        "dev",
        "gcc"
      ]
    },
    {
      "name": "dev-asan-gcc",
      "displayName": "Developer Mode - ASAN (GNU C/C++)",
      "description": "Preset for development activities and debugging with address sanitizer",
      "inherits": [
        "dev",
        "asan",
        "gcc"
      ]
    },
    {
      "name": "dev-lsan-gcc",
      "displayName": "Developer Mode - LSAN (GNU C/C++)",
      "description": "Preset for development activities and debugging with leak sanitizer",
      "inherits": [
        "dev",
        "lsan",
        "gcc"
      ]
    },
    {
      "name": "dev-msan-gcc",
      "displayName": "Developer Mode - MSAN (GNU C/C++)",
      "description": "Preset for development activities and debugging with memory sanitizer",
      "inherits": [
        "dev",
        "msan",
        "gcc"
      ]
    },
    {
      "name": "dev-tsan-gcc",
      "displayName": "Developer Mode - TSAN (GNU C/C++)",
      "description": "Preset for development activities and debugging with thread sanitizer",
      "inherits": [
        "dev",
        "tsan",
        "gcc"
      ]
    },
    {
      "name": "dev-ubsan-gcc",
      "displayName": "Developer Mode - UBSAN (GNU C/C++)",
      "description": "Preset for development activities and debugging with undefined sanitizer",
      "inherits": [
        "dev",
        "ubsan",
        "gcc"
      ]
    },
    {
      "name": "ci-gcc",
      "displayName": "CI Mode (GNU C/C++)",
      "description": "Preset for continuous integration",
      "inherits": [
        "ci",
        "gcc"
      ]
    },
    {
      "name": "ci-asan-gcc",
      "displayName": "CI Mode - ASAN (GNU C/C++)",
      "description": "Preset for continuous integration with address sanitizer",
      "inherits": [
        "ci",
        "asan",
        "gcc"
      ]
    },
    {
      "name": "ci-lsan-gcc",
      "displayName": "CI Mode - LSAN (GNU C/C++)",
      "description": "Preset for continuous integration with leak sanitizer",
      "inherits": [
        "ci",
        "lsan",
        "gcc"
      ]
    },
    {
      "name": "ci-msan-gcc",
      "displayName": "CI Mode - MSAN (GNU C/C++)",
      "description": "Preset for continuous integration with memory sanitizer",
      "inherits": [
        "ci",
        "msan",
        "gcc"
      ]
    },
    {
      "name": "ci-tsan-gcc",
      "displayName": "CI Mode - TSAN (GNU C/C++)",
      "description": "Preset for continuous integration with thread sanitizer",
      "inherits": [
        "ci",
        "tsan",
        "gcc"
      ]
    },
    {
      "name": "ci-ubsan-gcc",
      "displayName": "CI Mode - UBSAN (GNU C/C++)",
      "description": "Preset for continuous integration with undefined sanitizer",
      "inherits": [
        "ci",
        "ubsan",
        "gcc"
      ]
    },
    {
      "name": "perf-gcc",
      "displayName": "Profiler Mode (GNU C/C++)",
      "description": "Preset for profiling performance",
      "inherits": [
        "perf",
        "gcc"
      ]
    },
    {
      "name": "dev-clang",
      "displayName": "Developer Mode (Clang (LLVM) C/C++)",
      "description": "Preset for development activities and debugging",
      "inherits": [
        "dev",
        "clang"
      ]
    },
    {
      "name": "dev-asan-clang",
      "displayName": "Developer Mode - ASAN (Clang (LLVM) C/C++)",
      "description": "Preset for development activities and debugging with address sanitizer",
      "inherits": [
        "dev",
        "asan",
        "clang"
      ]
    },
    {
      "name": "dev-lsan-clang",
      "displayName": "Developer Mode - LSAN (Clang (LLVM) C/C++)",
      "description": "Preset for development activities and debugging with leak sanitizer",
      "inherits": [
        "dev",
        "lsan",
        "clang"
      ]
    },
    {
      "name": "dev-msan-clang",
      "displayName": "Developer Mode - MSAN (Clang (LLVM) C/C++)",
      "description": "Preset for development activities and debugging with memory sanitizer",
      "inherits": [
        "dev",
        "msan",
        "clang"
      ]
    },
    {
      "name": "dev-tsan-clang",
      "displayName": "Developer Mode - TSAN (Clang (LLVM) C/C++)",
      "description": "Preset for development activities and debugging with thread sanitizer",
      "inherits": [
        "dev",
        "tsan",
        "clang"
      ]
    },
    {
      "name": "dev-ubsan-clang",
      "displayName": "Developer Mode - UBSAN (Clang (LLVM) C/C++)",
      "description": "Preset for development activities and debugging with undefined sanitizer",
      "inherits": [
        "dev",
        "ubsan",
        "clang"
      ]
    },
    {
      "name": "ci-clang",
      "displayName": "CI Mode (Clang (LLVM) C/C++)",
      "description": "Preset for continuous integration",
      "inherits": [
        "ci",
        "clang"
      ]
    },
    {
      "name": "ci-asan-clang",
      "displayName": "CI Mode - ASAN (Clang (LLVM) C/C++)",
      "description": "Preset for continuous integration with address sanitizer",
      "inherits": [
        "ci",
        "asan",
        "clang"
      ]
    },
    {
      "name": "ci-lsan-clang",
      "displayName": "CI Mode - LSAN (Clang (LLVM) C/C++)",
      "description": "Preset for continuous integration with leak sanitizer",
      "inherits": [
        "ci",
        "lsan",
        "clang"
      ]
    },
    {
      "name": "ci-msan-clang",
      "displayName": "CI Mode - MSAN (Clang (LLVM) C/C++)",
      "description": "Preset for continuous integration with memory sanitizer",
      "inherits": [
        "ci",
        "msan",
        "clang"
      ]
    },
    {
      "name": "ci-tsan-clang",
      "displayName": "CI Mode - TSAN (Clang (LLVM) C/C++)",
      "description": "Preset for continuous integration with thread sanitizer",
      "inherits": [
        "ci",
        "tsan",
        "clang"
      ]
    },
    {
      "name": "ci-ubsan-clang",
      "displayName": "CI Mode - UBSAN (Clang (LLVM) C/C++)",
      "description": "Preset for continuous integration with undefined sanitizer",
      "inherits": [
        "ci",
        "ubsan",
        "clang"
      ]
    },
    {
      "name": "perf-clang",
      "displayName": "Profiler Mode (Clang (LLVM) C/C++)",
      "description": "Preset for profiling performance",
      "inherits": [
        "perf",
        "clang"
      ]
    },
    {
      "name": "dev-msvc",
      "displayName": "Developer Mode (Microsoft Visual C/C++)",
      "description": "Preset for development activities and debugging",
      "inherits": [
        "dev",
        "msvc"
      ]
    },
    {
      "name": "ci-msvc",
      "displayName": "CI Mode (Microsoft Visual C/C++)",
      "description": "Preset for continuous integration",
      "inherits": [
        "ci",
        "msvc"
      ]
    },
    {
      "name": "perf-msvc",
      "displayName": "Profiler Mode (Microsoft Visual C/C++)",
      "description": "Preset for profiling performance",
      "inherits": [
        "perf",
        "msvc"
      ]
    }
  ],
  "buildPresets": [
    {
      "name": "dev-gcc",
      "displayName": "Developer Mode (GNU C/C++)",
      "description": "Preset for development activities and debugging",
      "configurePreset": "dev-gcc"
    },
    {
      "name": "dev-asan-gcc",
      "displayName": "Developer Mode - ASAN (GNU C/C++)",
      "description": "Preset for development activities and debugging with address sanitizer",
      "configurePreset": "dev-asan-gcc"
    },
    {
      "name": "dev-lsan-gcc",
      "displayName": "Developer Mode - LSAN (GNU C/C++)",
      "description": "Preset for development activities and debugging with leak sanitizer",
      "configurePreset": "dev-lsan-gcc"
    },
    {
      "name": "dev-msan-gcc",
      "displayName": "Developer Mode - MSAN (GNU C/C++)",
      "description": "Preset for development activities and debugging with memory sanitizer",
      "configurePreset": "dev-msan-gcc"
    },
    {
      "name": "dev-tsan-gcc",
      "displayName": "Developer Mode - TSAN (GNU C/C++)",
      "description": "Preset for development activities and debugging with thread sanitizer",
      "configurePreset": "dev-tsan-gcc"
    },
    {
      "name": "dev-ubsan-gcc",
      "displayName": "Developer Mode - UBSAN (GNU C/C++)",
      "description": "Preset for development activities and debugging with undefined sanitizer",
      "configurePreset": "dev-ubsan-gcc"
    },
    {
      "name": "ci-gcc",
      "displayName": "CI Mode (GNU C/C++)",
      "description": "Preset for continuous integration",
      "configurePreset": "ci-gcc"
    },
    {
      "name": "ci-asan-gcc",
      "displayName": "CI Mode - ASAN (GNU C/C++)",
      "description": "Preset for continuous integration with address sanitizer",
      "configurePreset": "ci-asan-gcc"
    },
    {
      "name": "ci-lsan-gcc",
      "displayName": "CI Mode - LSAN (GNU C/C++)",
      "description": "Preset for continuous integration with leak sanitizer",
      "configurePreset": "ci-lsan-gcc"
    },
    {
      "name": "ci-msan-gcc",
      "displayName": "CI Mode - MSAN (GNU C/C++)",
      "description": "Preset for continuous integration with memory sanitizer",
      "configurePreset": "ci-msan-gcc"
    },
    {
      "name": "ci-tsan-gcc",
      "displayName": "CI Mode - TSAN (GNU C/C++)",
      "description": "Preset for continuous integration with thread sanitizer",
      "configurePreset": "ci-tsan-gcc"
    },
    {
      "name": "ci-ubsan-gcc",
      "displayName": "CI Mode - UBSAN (GNU C/C++)",
      "description": "Preset for continuous integration with undefined sanitizer",
      "configurePreset": "ci-ubsan-gcc"
    },
    {
      "name": "perf-gcc",
      "displayName": "Profiler Mode (GNU C/C++)",
      "description": "Profiler mode preset with GNU C/C++",
      "configurePreset": "perf-gcc"
    },
    {
      "name": "dev-clang",
      "displayName": "Developer Mode (Clang (LLVM) C/C++)",
      "description": "Preset for development activities and debugging",
      "configurePreset": "dev-clang"
    },
    {
      "name": "dev-asan-clang",
      "displayName": "Developer Mode - ASAN (Clang (LLVM) C/C++)",
      "description": "Preset for development activities and debugging with address sanitizer",
      "configurePreset": "dev-asan-clang"
    },
    {
      "name": "dev-lsan-clang",
      "displayName": "Developer Mode - LSAN (Clang (LLVM) C/C++)",
      "description": "Preset for development activities and debugging with leak sanitizer",
      "configurePreset": "dev-lsan-clang"
    },
    {
      "name": "dev-msan-clang",
      "displayName": "Developer Mode - MSAN (Clang (LLVM) C/C++)",
      "description": "Preset for development activities and debugging with memory sanitizer",
      "configurePreset": "dev-msan-clang"
    },
    {
      "name": "dev-tsan-clang",
      "displayName": "Developer Mode - TSAN (Clang (LLVM) C/C++)",
      "description": "Preset for development activities and debugging with thread sanitizer",
      "configurePreset": "dev-tsan-clang"
    },
    {
      "name": "dev-ubsan-clang",
      "displayName": "Developer Mode - UBSAN (Clang (LLVM) C/C++)",
      "description": "Preset for development activities and debugging with undefined sanitizer",
      "configurePreset": "dev-ubsan-clang"
    },
    {
      "name": "ci-clang",
      "displayName": "CI Mode (Clang (LLVM) C/C++)",
      "description": "Preset for continuous integration",
      "configurePreset": "ci-clang"
    },
    {
      "name": "ci-asan-clang",
      "displayName": "CI Mode - ASAN (Clang (LLVM) C/C++)",
      "description": "Preset for continuous integration with address sanitizer",
      "configurePreset": "ci-asan-clang"
    },
    {
      "name": "ci-lsan-clang",
      "displayName": "CI Mode - LSAN (Clang (LLVM) C/C++)",
      "description": "Preset for continuous integration with leak sanitizer",
      "configurePreset": "ci-lsan-clang"
    },
    {
      "name": "ci-msan-clang",
      "displayName": "CI Mode - MSAN (Clang (LLVM) C/C++)",
      "description": "Preset for continuous integration with memory sanitizer",
      "configurePreset": "ci-msan-clang"
    },
    {
      "name": "ci-tsan-clang",
      "displayName": "CI Mode - TSAN (Clang (LLVM) C/C++)",
      "description": "Preset for continuous integration with thread sanitizer",
      "configurePreset": "ci-tsan-clang"
    },
    {
      "name": "ci-ubsan-clang",
      "displayName": "CI Mode - UBSAN (Clang (LLVM) C/C++)",
      "description": "Preset for continuous integration with undefined sanitizer",
      "configurePreset": "ci-ubsan-clang"
    },
    {
      "name": "perf-clang",
      "displayName": "Profiler Mode (Clang (LLVM) C/C++)",
      "description": "Preset for profiling performance",
      "configurePreset": "perf-clang"
    },
    {
      "name": "dev-msvc",
      "displayName": "Developer Mode (Microsoft Visual C/C++)",
      "description": "Preset for development activities and debugging",
      "configurePreset": "dev-msvc"
    },
    {
      "name": "ci-msvc",
      "displayName": "CI Mode (Microsoft Visual C/C++)",
      "description": "Preset for continuous integration",
      "configurePreset": "ci-msvc"
    },
    {
      "name": "perf-msvc",
      "displayName": "Profiler Mode (Microsoft Visual C/C++)",
      "description": "Preset for profiling performance",
      "configurePreset": "perf-msvc"
    },
    {
      "name": "doc",
      "displayName": "API Document Generator",
      "description": "Preset for generating API documentation",
      "configurePreset": "doc"
    }
  ],
  "testPresets": [
    {
      "name": "test-defaults",
      "displayName": "Test (Default)",
      "description": "Preset for default test configuration",
      "output": {
        "outputOnFailure": true
      },
      "execution": {
        "noTestsAction": "error",
        "stopOnFailure": true
      },
      "hidden": true
    },
    {
      "name": "dev-gcc",
      "displayName": "Developer Mode (GNU C/C++)",
      "description": "Preset for development activities and debugging",
      "configurePreset": "dev-gcc",
      "inherits": "test-defaults"
    },
    {
      "name": "dev-asan-gcc",
      "displayName": "Developer Mode - ASAN (GNU C/C++)",
      "description": "Preset for development activities and debugging with address sanitizer",
      "configurePreset": "dev-asan-gcc",
      "inherits": "test-defaults"
    },
    {
      "name": "dev-lsan-gcc",
      "displayName": "Developer Mode - LSAN (GNU C/C++)",
      "description": "Preset for development activities and debugging with leak sanitizer",
      "configurePreset": "dev-lsan-gcc",
      "inherits": "test-defaults"
    },
    {
      "name": "dev-msan-gcc",
      "displayName": "Developer Mode - MSAN (GNU C/C++)",
      "description": "Preset for development activities and debugging with memory sanitizer",
      "configurePreset": "dev-msan-gcc",
      "inherits": "test-defaults"
    },
    {
      "name": "dev-tsan-gcc",
      "displayName": "Developer Mode - TSAN (GNU C/C++)",
      "description": "Preset for development activities and debugging with thread sanitizer",
      "configurePreset": "dev-tsan-gcc",
      "inherits": "test-defaults"
    },
    {
      "name": "dev-ubsan-gcc",
      "displayName": "Developer Mode - UBSAN (GNU C/C++)",
      "description": "Preset for development activities and debugging with undefined sanitizer",
      "configurePreset": "dev-ubsan-gcc",
      "inherits": "test-defaults"
    },
    {
      "name": "ci-gcc",
      "displayName": "CI Mode (GNU C/C++)",
      "description": "Preset for continuous integration",
      "configurePreset": "ci-gcc",
      "inherits": "test-defaults"
    },
    {
      "name": "ci-asan-gcc",
      "displayName": "CI Mode - ASAN (GNU C/C++)",
      "description": "Preset for continuous integration with address sanitizer",
      "configurePreset": "ci-asan-gcc",
      "inherits": "test-defaults"
    },
    {
      "name": "ci-lsan-gcc",
      "displayName": "CI Mode - LSAN (GNU C/C++)",
      "description": "Preset for continuous integration with leak sanitizer",
      "configurePreset": "ci-lsan-gcc",
      "inherits": "test-defaults"
    },
    {
      "name": "ci-msan-gcc",
      "displayName": "CI Mode - MSAN (GNU C/C++)",
      "description": "Preset for continuous integration with memory sanitizer",
      "configurePreset": "ci-msan-gcc",
      "inherits": "test-defaults"
    },
    {
      "name": "ci-tsan-gcc",
      "displayName": "CI Mode - TSAN (GNU C/C++)",
      "description": "Preset for continuous integration with thread sanitizer",
      "configurePreset": "ci-tsan-gcc",
      "inherits": "test-defaults"
    },
    {
      "name": "ci-ubsan-gcc",
      "displayName": "CI Mode - UBSAN (GNU C/C++)",
      "description": "Preset for continuous integration with undefined sanitizer",
      "configurePreset": "ci-ubsan-gcc",
      "inherits": "test-defaults"
    },
    {
      "name": "perf-gcc",
      "displayName": "Profiler Mode (GNU C/C++)",
      "description": "Preset for profiling performance",
      "configurePreset": "perf-gcc",
      "inherits": "test-defaults"
    },
    {
      "name": "dev-clang",
      "displayName": "Developer Mode (Clang (LLVM) C/C++)",
      "description": "Preset for development activities and debugging",
      "configurePreset": "dev-clang",
      "inherits": "test-defaults"
    },
    {
      "name": "dev-asan-clang",
      "displayName": "Developer Mode - ASAN (Clang (LLVM) C/C++)",
      "description": "Preset for development activities and debugging with address sanitizer",
      "configurePreset": "dev-asan-clang",
      "inherits": "test-defaults"
    },
    {
      "name": "dev-lsan-clang",
      "displayName": "Developer Mode -LSAN  (Clang (LLVM) C/C++)",
      "description": "Preset for development activities and debugging with leak sanitizer",
      "configurePreset": "dev-lsan-clang",
      "inherits": "test-defaults"
    },
    {
      "name": "dev-msan-clang",
      "displayName": "Developer Mode - MSAN (Clang (LLVM) C/C++)",
      "description": "Preset for development activities and debugging with memory sanitizer",
      "configurePreset": "dev-msan-clang",
      "inherits": "test-defaults"
    },
    {
      "name": "dev-tsan-clang",
      "displayName": "Developer Mode - TSAN (Clang (LLVM) C/C++)",
      "description": "Preset for development activities and debugging with thread sanitizer",
      "configurePreset": "dev-tsan-clang",
      "inherits": "test-defaults"
    },
    {
      "name": "dev-ubsan-clang",
      "displayName": "Developer Mode -UBSAN (Clang (LLVM) C/C++)",
      "description": "Preset for development activities and debugging with undefined sanitizer",
      "configurePreset": "dev-ubsan-clang",
      "inherits": "test-defaults"
    },
    {
      "name": "ci-clang",
      "displayName": "CI Mode (Clang (LLVM) C/C++)",
      "description": "Preset for continuous integration",
      "configurePreset": "ci-clang",
      "inherits": "test-defaults"
    },
    {
      "name": "ci-asan-clang",
      "displayName": "CI Mode - ASAN (Clang (LLVM) C/C++)",
      "description": "Preset for continuous integration with address sanitizer",
      "configurePreset": "ci-asan-clang",
      "inherits": "test-defaults"
    },
    {
      "name": "ci-lsan-clang",
      "displayName": "CI Mode - LSAN (Clang (LLVM) C/C++)",
      "description": "Preset for continuous integration with leak sanitizer",
      "configurePreset": "ci-lsan-clang",
      "inherits": "test-defaults"
    },
    {
      "name": "ci-msan-clang",
      "displayName": "CI Mode - MSAN (Clang (LLVM) C/C++)",
      "description": "Preset for continuous integration with memory sanitizer",
      "configurePreset": "ci-msan-clang",
      "inherits": "test-defaults"
    },
    {
      "name": "ci-tsan-clang",
      "displayName": "CI Mode - TSAN (Clang (LLVM) C/C++)",
      "description": "Preset for continuous integration with thread sanitizer",
      "configurePreset": "ci-tsan-clang",
      "inherits": "test-defaults"
    },
    {
      "name": "ci-ubsan-clang",
      "displayName": "CI Mode - UBSAN (Clang (LLVM) C/C++)",
      "description": "Preset for continuous integration with undefined sanitizer",
      "configurePreset": "ci-ubsan-clang",
      "inherits": "test-defaults"
    },
    {
      "name": "perf-clang",
      "displayName": "Profiler Mode (Clang (LLVM) C/C++)",
      "description": "Preset for profiling performance",
      "configurePreset": "perf-clang",
      "inherits": "test-defaults"
    },
    {
      "name": "dev-msvc",
      "displayName": "Developer Mode (Microsoft Visual C/C++)",
      "description": "Preset for development activities and debugging",
      "configurePreset": "dev-msvc",
      "inherits": "test-defaults"
    },
    {
      "name": "ci-msvc",
      "displayName": "CI Mode (Microsoft Visual C/C++)",
      "description": "Preset for continuous integration",
      "configurePreset": "ci-msvc",
      "inherits": "test-defaults"
    },
    {
      "name": "perf-msvc",
      "displayName": "Profiler Mode (Microsoft Visual C/C++)",
      "description": "Preset for profiling performance",
      "configurePreset": "perf-msvc",
      "inherits": "test-defaults"
    }
  ],
  "packagePresets": [
    {
      "name": "dev-gcc",
      "displayName": "Developer Mode (GNU C/C++)",
      "description": "Preset for development activities and debugging",
      "configurePreset": "dev-gcc"
    },
    {
      "name": "ci-gcc",
      "displayName": "CI Mode (GNU C/C++)",
      "description": "Preset for continuous integration",
      "configurePreset": "ci-gcc"
    },
    {
      "name": "dev-clang",
      "displayName": "Developer Mode (Clang (LLVM) C/C++)",
      "description": "Preset for development activities and debugging",
      "configurePreset": "dev-clang"
    },
    {
      "name": "ci-clang",
      "displayName": "CI Mode (Clang (LLVM) C/C++)",
      "description": "Preset for continuous integration",
      "configurePreset": "ci-clang"
    },
    {
      "name": "dev-msvc",
      "displayName": "Developer Mode (Microsoft Visual C/C++)",
      "description": "Preset for development activities and debugging",
      "configurePreset": "dev-msvc"
    },
    {
      "name": "ci-msvc",
      "displayName": "CI Mode (Microsoft Visual C/C++)",
      "description": "Preset for continuous integration",
      "configurePreset": "ci-msvc"
    }
  ],
  "workflowPresets": [
    {
      "name": "dev-gcc",
      "displayName": "Developer Mode (GNU C/C++)",
      "description": "Preset for development activities and debugging",
      "steps": [
        {
          "type": "configure",
          "name": "dev-gcc"
        },
        {
          "type": "build",
          "name": "dev-gcc"
        },
        {
          "type": "test",
          "name": "dev-gcc"
        },
        {
          "type": "package",
          "name": "dev-gcc"
        }
      ]
    },
    {
      "name": "dev-asan-gcc",
      "displayName": "Developer Mode - ASAN (GNU C/C++)",
      "description": "Preset for development activities and debugging with address sanitizer",
      "steps": [
        {
          "type": "configure",
          "name": "dev-asan-gcc"
        },
        {
          "type": "build",
          "name": "dev-asan-gcc"
        },
        {
          "type": "test",
          "name": "dev-asan-gcc"
        }
      ]
    },
    {
      "name": "dev-lsan-gcc",
      "displayName": "Developer Mode - LSAN (GNU C/C++)",
      "description": "Preset for development activities and debugging with leak sanitizer",
      "steps": [
        {
          "type": "configure",
          "name": "dev-lsan-gcc"
        },
        {
          "type": "build",
          "name": "dev-lsan-gcc"
        },
        {
          "type": "test",
          "name": "dev-lsan-gcc"
        }
      ]
    },
    {
      "name": "dev-msan-gcc",
      "displayName": "Developer Mode - MSAN (GNU C/C++)",
      "description": "Preset for development activities and debugging with memory sanitizer",
      "steps": [
        {
          "type": "configure",
          "name": "dev-msan-gcc"
        },
        {
          "type": "build",
          "name": "dev-msan-gcc"
        },
        {
          "type": "test",
          "name": "dev-msan-gcc"
        }
      ]
    },
    {
      "name": "dev-tsan-gcc",
      "displayName": "Developer Mode - TSAN (GNU C/C++)",
      "description": "Preset for development activities and debugging with thread sanitizer",
      "steps": [
        {
          "type": "configure",
          "name": "dev-tsan-gcc"
        },
        {
          "type": "build",
          "name": "dev-tsan-gcc"
        },
        {
          "type": "test",
          "name": "dev-tsan-gcc"
        }
      ]
    },
    {
      "name": "dev-ubsan-gcc",
      "displayName": "Developer Mode - UBSAN (GNU C/C++)",
      "description": "Preset for development activities and debugging with undefined sanitizer",
      "steps": [
        {
          "type": "configure",
          "name": "dev-ubsan-gcc"
        },
        {
          "type": "build",
          "name": "dev-ubsan-gcc"
        },
        {
          "type": "test",
          "name": "dev-ubsan-gcc"
        }
      ]
    },
    {
      "name": "ci-gcc",
      "displayName": "CI Mode (Clang (LLVM) C/C++)",
      "description": "Preset for continuous integration",
      "steps": [
        {
          "type": "configure",
          "name": "ci-gcc"
        },
        {
          "type": "build",
          "name": "ci-gcc"
        },
        {
          "type": "test",
          "name": "ci-gcc"
        },
        {
          "type": "package",
          "name": "ci-gcc"
        }
      ]
    },
    {
      "name": "ci-asan-gcc",
      "displayName": "CI Mode - ASAN (GNU C/C++)",
      "description": "Preset for continuous integration with address sanitizer",
      "steps": [
        {
          "type": "configure",
          "name": "ci-asan-gcc"
        },
        {
          "type": "build",
          "name": "ci-asan-gcc"
        },
        {
          "type": "test",
          "name": "ci-asan-gcc"
        }
      ]
    },
    {
      "name": "ci-lsan-gcc",
      "displayName": "CI Mode - LSAN (GNU C/C++)",
      "description": "Preset for continuous integration with leak sanitizer",
      "steps": [
        {
          "type": "configure",
          "name": "ci-lsan-gcc"
        },
        {
          "type": "build",
          "name": "ci-lsan-gcc"
        },
        {
          "type": "test",
          "name": "ci-lsan-gcc"
        }
      ]
    },
    {
      "name": "ci-msan-gcc",
      "displayName": "CI Mode - MSAN (GNU C/C++)",
      "description": "Preset for continuous integration with memory sanitizer",
      "steps": [
        {
          "type": "configure",
          "name": "ci-msan-gcc"
        },
        {
          "type": "build",
          "name": "ci-msan-gcc"
        },
        {
          "type": "test",
          "name": "ci-msan-gcc"
        }
      ]
    },
    {
      "name": "ci-tsan-gcc",
      "displayName": "CI Mode - TSAN (GNU C/C++)",
      "description": "Preset for continuous integration with thread sanitizer",
      "steps": [
        {
          "type": "configure",
          "name": "ci-tsan-gcc"
        },
        {
          "type": "build",
          "name": "ci-tsan-gcc"
        },
        {
          "type": "test",
          "name": "ci-tsan-gcc"
        }
      ]
    },
    {
      "name": "ci-ubsan-gcc",
      "displayName": "CI Mode - UBSAN (GNU C/C++)",
      "description": "Preset for continuous integration with undefined sanitizer",
      "steps": [
        {
          "type": "configure",
          "name": "ci-ubsan-gcc"
        },
        {
          "type": "build",
          "name": "ci-ubsan-gcc"
        },
        {
          "type": "test",
          "name": "ci-ubsan-gcc"
        }
      ]
    },
    {
      "name": "perf-gcc",
      "displayName": "Profiler Mode (GNU C/C++)",
      "description": "Preset for profiling performance",
      "steps": [
        {
          "type": "configure",
          "name": "perf-gcc"
        },
        {
          "type": "build",
          "name": "perf-gcc"
        },
        {
          "type": "test",
          "name": "perf-gcc"
        }
      ]
    },
    {
      "name": "dev-clang",
      "displayName": "Developer Mode (Clang (LLVM) C/C++)",
      "description": "Preset for development activities and debugging",
      "steps": [
        {
          "type": "configure",
          "name": "dev-clang"
        },
        {
          "type": "build",
          "name": "dev-clang"
        },
        {
          "type": "test",
          "name": "dev-clang"
        },
        {
          "type": "package",
          "name": "dev-clang"
        }
      ]
    },
    {
      "name": "dev-asan-clang",
      "displayName": "Developer Mode - ASAN (Clang (LLVM) C/C++)",
      "description": "Preset for development activities and debugging with address sanitizer",
      "steps": [
        {
          "type": "configure",
          "name": "dev-asan-clang"
        },
        {
          "type": "build",
          "name": "dev-asan-clang"
        },
        {
          "type": "test",
          "name": "dev-asan-clang"
        }
      ]
    },
    {
      "name": "dev-lsan-clang",
      "displayName": "Developer Mode - LSAN (Clang (LLVM) C/C++)",
      "description": "Preset for development activities and debugging with leak sanitizer",
      "steps": [
        {
          "type": "configure",
          "name": "dev-lsan-clang"
        },
        {
          "type": "build",
          "name": "dev-lsan-clang"
        },
        {
          "type": "test",
          "name": "dev-lsan-clang"
        }
      ]
    },
    {
      "name": "dev-msan-clang",
      "displayName": "Developer Mode - MSAN (Clang (LLVM) C/C++)",
      "description": "Preset for development activities and debugging with memory sanitizer",
      "steps": [
        {
          "type": "configure",
          "name": "dev-msan-clang"
        },
        {
          "type": "build",
          "name": "dev-msan-clang"
        },
        {
          "type": "test",
          "name": "dev-msan-clang"
        }
      ]
    },
    {
      "name": "dev-tsan-clang",
      "displayName": "Developer Mode - TSAN (Clang (LLVM) C/C++)",
      "description": "Preset for development activities and debugging with thread sanitizer",
      "steps": [
        {
          "type": "configure",
          "name": "dev-tsan-clang"
        },
        {
          "type": "build",
          "name": "dev-tsan-clang"
        },
        {
          "type": "test",
          "name": "dev-tsan-clang"
        }
      ]
    },
    {
      "name": "dev-ubsan-clang",
      "displayName": "Developer Mode - UBSAN (Clang (LLVM) C/C++)",
      "description": "Preset for development activities and debugging with undefined sanitizer",
      "steps": [
        {
          "type": "configure",
          "name": "dev-ubsan-clang"
        },
        {
          "type": "build",
          "name": "dev-ubsan-clang"
        },
        {
          "type": "test",
          "name": "dev-ubsan-clang"
        }
      ]
    },
    {
      "name": "ci-clang",
      "displayName": "CI Mode (Clang (LLVM) C/C++)",
      "description": "Preset for continuous integration",
      "steps": [
        {
          "type": "configure",
          "name": "ci-clang"
        },
        {
          "type": "build",
          "name": "ci-clang"
        },
        {
          "type": "test",
          "name": "ci-clang"
        },
        {
          "type": "package",
          "name": "ci-clang"
        }
      ]
    },
    {
      "name": "ci-asan-clang",
      "displayName": "CI Mode - ASAN (Clang (LLVM) C/C++)",
      "description": "Preset for continuous integration with address sanitizer",
      "steps": [
        {
          "type": "configure",
          "name": "ci-asan-clang"
        },
        {
          "type": "build",
          "name": "ci-asan-clang"
        },
        {
          "type": "test",
          "name": "ci-asan-clang"
        }
      ]
    },
    {
      "name": "ci-lsan-clang",
      "displayName": "CI Mode - LSAN (Clang (LLVM) C/C++)",
      "description": "Preset for continuous integration with leak sanitizer",
      "steps": [
        {
          "type": "configure",
          "name": "ci-lsan-clang"
        },
        {
          "type": "build",
          "name": "ci-lsan-clang"
        },
        {
          "type": "test",
          "name": "ci-lsan-clang"
        }
      ]
    },
    {
      "name": "ci-msan-clang",
      "displayName": "CI Mode - MSAN (Clang (LLVM) C/C++)",
      "description": "Preset for continuous integration with memory sanitizer",
      "steps": [
        {
          "type": "configure",
          "name": "ci-msan-clang"
        },
        {
          "type": "build",
          "name": "ci-msan-clang"
        },
        {
          "type": "test",
          "name": "ci-msan-clang"
        }
      ]
    },
    {
      "name": "ci-tsan-clang",
      "displayName": "CI Mode - TSAN (Clang (LLVM) C/C++)",
      "description": "Preset for continuous integration with thread sanitizer",
      "steps": [
        {
          "type": "configure",
          "name": "ci-tsan-clang"
        },
        {
          "type": "build",
          "name": "ci-tsan-clang"
        },
        {
          "type": "test",
          "name": "ci-tsan-clang"
        }
      ]
    },
    {
      "name": "ci-ubsan-clang",
      "displayName": "CI Mode - UBSAN (Clang (LLVM) C/C++)",
      "description": "Preset for continuous integration with undefined sanitizer",
      "steps": [
        {
          "type": "configure",
          "name": "ci-ubsan-clang"
        },
        {
          "type": "build",
          "name": "ci-ubsan-clang"
        },
        {
          "type": "test",
          "name": "ci-ubsan-clang"
        }
      ]
    },
    {
      "name": "perf-clang",
      "displayName": "Profiler Mode (Clang (LLVM) C/C++)",
      "description": "Preset for profiling performance",
      "steps": [
        {
          "type": "configure",
          "name": "perf-clang"
        },
        {
          "type": "build",
          "name": "perf-clang"
        },
        {
          "type": "test",
          "name": "perf-clang"
        }
      ]
    },
    {
      "name": "dev-msvc",
      "displayName": "Developer Mode (Microsoft Visual C/C++)",
      "description": "Preset for development activities and debugging",
      "steps": [
        {
          "type": "configure",
          "name": "dev-msvc"
        },
        {
          "type": "build",
          "name": "dev-msvc"
        },
        {
          "type": "test",
          "name": "dev-msvc"
        },
        {
          "type": "package",
          "name": "dev-msvc"
        }
      ]
    },
    {
      "name": "ci-msvc",
      "displayName": "CI Mode (Microsoft Visual C/C++)",
      "description": "Preset for continuous integration",
      "steps": [
        {
          "type": "configure",
          "name": "ci-msvc"
        },
        {
          "type": "build",
          "name": "ci-msvc"
        },
        {
          "type": "test",
          "name": "ci-msvc"
        },
        {
          "type": "package",
          "name": "ci-msvc"
        }
      ]
    },
    {
      "name": "perf-msvc",
      "displayName": "Profiler Mode (Microsoft Visual C/C++)",
      "description": "Preset for profiling performance",
      "steps": [
        {
          "type": "configure",
          "name": "perf-msvc"
        },
        {
          "type": "build",
          "name": "perf-msvc"
        },
        {
          "type": "test",
          "name": "perf-msvc"
        }
      ]
    },
    {
      "name": "doc",
      "displayName": "API Document Generator",
      "description": "Preset for generating API documentation",
      "steps": [
        {
          "type": "configure",
          "name": "doc"
        },
        {
          "type": "build",
          "name": "doc"
        }
      ]
    }
  ]
}
