{
  "version": 6,
  "configurePresets": [
    {
      "name": "base",
      "hidden": true,
      "generator": "Ninja",
      "binaryDir": "${sourceDir}/build/Debug/${presetName}",
      "installDir": "${sourceDir}/install/Debug/${presetName}"
    },
    {
      "name": "gcc",
      "displayName": "GNU C/C++",
      "description": "Preset for GNU C/C++ compiler toolchain",
      "hidden": true,
      "toolchainFile": "${sourceDir}/cmake/toolchains/toolchain-gcc.cmake"
    },
    {
      "name": "clang",
      "displayName": "Clang (LLVM) C/C++",
      "description": "Preset for Clang (LLVM) C/C++ compiler toolchain",
      "hidden": true,
      "toolchainFile": "${sourceDir}/cmake/toolchains/toolchain-clang.cmake"
    },
    {
      "name": "msvc",
      "displayName": "Microsoft Visual C/C++",
      "description": "Preset for Microsoft Visual C/C++ compiler toolchain",
      "hidden": true,
      "condition": {
        "type": "equals",
        "lhs": "${hostSystemName}",
        "rhs": "Windows"
      },
      "toolchainFile": "${sourceDir}/cmake/toolchains/toolchain-msvc.cmake"
    },
    {
      "name": "dev",
      "displayName": "Developer Mode",
      "description": "Preset for development activities and debugging",
      "cacheVariables": {
        "CMAKE_BUILD_TYPE": "Debug",
        "CMAKE_CONFIGURATION_TYPES": "Debug",
        "CMAKE_PREFIX_PATH": "${sourceDir}/build/generators;${sourceDir}/build/Debug/generators",
        "CMAKE_MODULE_PATH": "${sourceDir}/build/generators;${sourceDir}/build/Debug/generators",
        "WITH_TESTS": true
      },
      "inherits": "base"
    },
    {
      "name": "ci",
      "displayName": "CI Mode",
      "description": "Preset for continuous integration",
      "cacheVariables": {
        "CMAKE_BUILD_TYPE": "Release",
        "CMAKE_CONFIGURATION_TYPES": "Release",
        "CMAKE_PREFIX_PATH": "${sourceDir}/build/generators;${sourceDir}/build/Release/generators",
        "CMAKE_MODULE_PATH": "${sourceDir}/build/generators;${sourceDir}/build/Release/generators",
        "WITH_TESTS": true,
        "WITH_COVERAGE": true,
        "WITH_DOC": true
      },
      "inherits": "base"
    },
    {
      "name": "profile",
      "displayName": "Profiler Mode",
      "description": "Preset for profiling performance",
      "cacheVariables": {
        "CMAKE_BUILD_TYPE": "RelWithDebInfo",
        "CMAKE_CONFIGURATION_TYPES": "RelWithDebInfo",
        "CMAKE_PREFIX_PATH": "${sourceDir}/build/generators;${sourceDir}/build/RelWithDebInfo/generators",
        "CMAKE_MODULE_PATH": "${sourceDir}/build/generators;${sourceDir}/build/RelWithDebInfo/generators",
        "WITH_BENCHMARKS": true
      },
      "inherits": "base"
    },
    {
      "name": "doc",
      "displayName": "API Document Generator",
      "description": "Preset for generating API documentation",
      "cacheVariables": {
        "CMAKE_BUILD_TYPE": "Release",
        "CMAKE_CONFIGURATION_TYPES": "Release",
        "CMAKE_PREFIX_PATH": "${sourceDir}/build/generators;${sourceDir}/build/Release/generators",
        "CMAKE_MODULE_PATH": "${sourceDir}/build/generators;${sourceDir}/build/Release/generators",
        "WITH_DOC": true
      },
      "inherits": "base"
    },
    {
      "name": "asan",
      "displayName": "Address Sanitizer",
      "description": "Preset for enabling address sanitizer",
      "cacheVariables": {
        "WITH_ASAN": true
      },
      "inherits": "base"
    },
    {
      "name": "lsan",
      "displayName": "Leak Sanitizer",
      "description": "Preset for enabling leak sanitizer",
      "cacheVariables": {
        "WITH_LSAN": true
      },
      "inherits": "base"
    },
    {
      "name": "msan",
      "displayName": "Memory Sanitizer",
      "description": "Preset for enabling memory sanitizer",
      "cacheVariables": {
        "WITH_MSAN": true
      },
      "inherits": "base"
    },
    {
      "name": "tsan",
      "displayName": "Thread Sanitizer",
      "description": "Preset for enabling thread sanitizer",
      "cacheVariables": {
        "WITH_TSAN": true
      },
      "inherits": "base"
    },
    {
      "name": "ubsan",
      "displayName": "Undefined Behavior Sanitizer",
      "description": "Preset for enabling undefined behavior sanitizer",
      "cacheVariables": {
        "WITH_UBSAN": true
      },
      "inherits": "base"
    },
    {
      "name": "dev-gcc",
      "displayName": "Developer Mode (GNU C/C++)",
      "description": "Preset for development activities and debugging",
      "inherits": [
        "dev",
        "gcc"
      ]
    },
    {
      "name": "asan-gcc",
      "displayName": "Developer Mode - ASAN (GNU C/C++)",
      "description": "Preset for development activities and debugging with address sanitizer",
      "inherits": [
        "dev",
        "asan",
        "gcc"
      ]
    },
    {
      "name": "lsan-gcc",
      "displayName": "Developer Mode - LSAN (GNU C/C++)",
      "description": "Preset for development activities and debugging with leak sanitizer",
      "inherits": [
        "dev",
        "lsan",
        "gcc"
      ]
    },
    {
      "name": "msan-gcc",
      "displayName": "Developer Mode - MSAN (GNU C/C++)",
      "description": "Preset for development activities and debugging with memory sanitizer",
      "inherits": [
        "dev",
        "msan",
        "gcc"
      ]
    },
    {
      "name": "tsan-gcc",
      "displayName": "Developer Mode - TSAN (GNU C/C++)",
      "description": "Preset for development activities and debugging with thread sanitizer",
      "inherits": [
        "dev",
        "tsan",
        "gcc"
      ]
    },
    {
      "name": "ubsan-gcc",
      "displayName": "Developer Mode - UBSAN (GNU C/C++)",
      "description": "Preset for development activities and debugging with undefined behavior sanitizer",
      "inherits": [
        "dev",
        "ubsan",
        "gcc"
      ]
    },
    {
      "name": "ci-gcc",
      "displayName": "CI Mode (GNU C/C++)",
      "description": "Preset for continuous integration",
      "inherits": [
        "ci",
        "gcc"
      ]
    },
    {
      "name": "profile-gcc",
      "displayName": "Profiler Mode (GNU C/C++)",
      "description": "Preset for profiling performance",
      "inherits": [
        "profile",
        "gcc"
      ]
    },
    {
      "name": "dev-clang",
      "displayName": "Developer Mode (Clang (LLVM) C/C++)",
      "description": "Preset for development activities and debugging",
      "inherits": [
        "dev",
        "clang"
      ]
    },
    {
      "name": "asan-clang",
      "displayName": "Developer Mode - ASAN (Clang (LLVM) C/C++)",
      "description": "Preset for development activities and debugging with address sanitizer",
      "inherits": [
        "dev",
        "asan",
        "clang"
      ]
    },
    {
      "name": "lsan-clang",
      "displayName": "Developer Mode - LSAN (Clang (LLVM) C/C++)",
      "description": "Preset for development activities and debugging with leak sanitizer",
      "inherits": [
        "dev",
        "lsan",
        "clang"
      ]
    },
    {
      "name": "msan-clang",
      "displayName": "Developer Mode - MSAN (Clang (LLVM) C/C++)",
      "description": "Preset for development activities and debugging with memory sanitizer",
      "inherits": [
        "dev",
        "msan",
        "clang"
      ]
    },
    {
      "name": "tsan-clang",
      "displayName": "Developer Mode - TSAN (Clang (LLVM) C/C++)",
      "description": "Preset for development activities and debugging with thread sanitizer",
      "inherits": [
        "dev",
        "tsan",
        "clang"
      ]
    },
    {
      "name": "ubsan-clang",
      "displayName": "Developer Mode - UBSAN (Clang (LLVM) C/C++)",
      "description": "Preset for development activities and debugging with undefined sanitizer",
      "inherits": [
        "dev",
        "ubsan",
        "clang"
      ]
    },
    {
      "name": "ci-clang",
      "displayName": "CI Mode (Clang (LLVM) C/C++)",
      "description": "Preset for continuous integration",
      "inherits": [
        "ci",
        "clang"
      ]
    },
    {
      "name": "profile-clang",
      "displayName": "Profiler Mode (Clang (LLVM) C/C++)",
      "description": "Preset for profiling performance",
      "inherits": [
        "profile",
        "clang"
      ]
    },
    {
      "name": "dev-msvc",
      "displayName": "Developer Mode (Microsoft Visual C/C++)",
      "description": "Preset for development activities and debugging",
      "inherits": [
        "dev",
        "msvc"
      ]
    },
    {
      "name": "ci-msvc",
      "displayName": "CI Mode (Microsoft Visual C/C++)",
      "description": "Preset for continuous integration",
      "inherits": [
        "ci",
        "msvc"
      ]
    },
    {
      "name": "profile-msvc",
      "displayName": "Profiler Mode (Microsoft Visual C/C++)",
      "description": "Preset for profiling performance",
      "inherits": [
        "profile",
        "msvc"
      ]
    }
  ],
  "buildPresets": [
    {
      "name": "dev",
      "displayName": "Developer Mode",
      "description": "Preset for development activities and debugging",
      "configurePreset": "dev"
    },
    {
      "name": "ci",
      "displayName": "CI Mode",
      "description": "Preset for continuous integration",
      "configurePreset": "ci"
    },
    {
      "name": "profile",
      "displayName": "Profiler Mode",
      "description": "Preset for profiling performance",
      "configurePreset": "profile"
    },
    {
      "name": "doc",
      "displayName": "API Document Generator",
      "description": "Preset for generating API documentation",
      "configurePreset": "doc"
    },
    {
      "name": "dev-gcc",
      "displayName": "Developer Mode (GNU C/C++)",
      "description": "Preset for development activities and debugging",
      "configurePreset": "dev-gcc"
    },
    {
      "name": "asan-gcc",
      "displayName": "Developer Mode - ASAN (GNU C/C++)",
      "description": "Preset for development activities and debugging with address sanitizer",
      "configurePreset": "asan-gcc"
    },
    {
      "name": "lsan-gcc",
      "displayName": "Developer Mode - LSAN (GNU C/C++)",
      "description": "Preset for development activities and debugging with leak sanitizer",
      "configurePreset": "lsan-gcc"
    },
    {
      "name": "msan-gcc",
      "displayName": "Developer Mode - MSAN (GNU C/C++)",
      "description": "Preset for development activities and debugging with memory sanitizer",
      "configurePreset": "msan-gcc"
    },
    {
      "name": "tsan-gcc",
      "displayName": "Developer Mode - TSAN (GNU C/C++)",
      "description": "Preset for development activities and debugging with thread sanitizer",
      "configurePreset": "tsan-gcc"
    },
    {
      "name": "ubsan-gcc",
      "displayName": "Developer Mode - UBSAN (GNU C/C++)",
      "description": "Preset for development activities and debugging with undefined sanitizer",
      "configurePreset": "ubsan-gcc"
    },
    {
      "name": "ci-gcc",
      "displayName": "CI Mode (GNU C/C++)",
      "description": "Preset for continuous integration",
      "configurePreset": "ci-gcc"
    },
    {
      "name": " profile-gcc",
      "displayName": "Profiler Mode (GNU C/C++)",
      "description": "Profiler mode preset with GNU C/C++",
      "configurePreset": "profile-gcc"
    },
    {
      "name": "dev-clang",
      "displayName": "Developer Mode (Clang (LLVM) C/C++)",
      "description": "Preset for development activities and debugging",
      "configurePreset": "dev-clang"
    },
    {
      "name": "asan-clang",
      "displayName": "Developer Mode - ASAN (Clang (LLVM) C/C++)",
      "description": "Preset for development activities and debugging with address sanitizer",
      "configurePreset": "asan-clang"
    },
    {
      "name": "lsan-clang",
      "displayName": "Developer Mode - LSAN (Clang (LLVM) C/C++)",
      "description": "Preset for development activities and debugging with leak sanitizer",
      "configurePreset": "lsan-clang"
    },
    {
      "name": "msan-clang",
      "displayName": "Developer Mode - MSAN (Clang (LLVM) C/C++)",
      "description": "Preset for development activities and debugging with memory sanitizer",
      "configurePreset": "msan-clang"
    },
    {
      "name": "tsan-clang",
      "displayName": "Developer Mode - TSAN (Clang (LLVM) C/C++)",
      "description": "Preset for development activities and debugging with thread sanitizer",
      "configurePreset": "tsan-clang"
    },
    {
      "name": "ubsan-clang",
      "displayName": "Developer Mode - UBSAN (Clang (LLVM) C/C++)",
      "description": "Preset for development activities and debugging with undefined sanitizer",
      "configurePreset": "ubsan-clang"
    },
    {
      "name": "ci-clang",
      "displayName": "CI Mode (Clang (LLVM) C/C++)",
      "description": "Preset for continuous integration",
      "configurePreset": "ci-clang"
    },
    {
      "name": "profile-clang",
      "displayName": "Profiler Mode (Clang (LLVM) C/C++)",
      "description": "Preset for profiling performance",
      "configurePreset": "profile-clang"
    },
    {
      "name": "dev-msvc",
      "displayName": "Developer Mode (Microsoft Visual C/C++)",
      "description": "Preset for development activities and debugging",
      "configurePreset": "dev-msvc"
    },
    {
      "name": "ci-msvc",
      "displayName": "CI Mode (Microsoft Visual C/C++)",
      "description": "Preset for continuous integration",
      "configurePreset": "ci-msvc"
    },
    {
      "name": "profile-msvc",
      "displayName": "Profiler Mode (Microsoft Visual C/C++)",
      "description": "Preset for profiling performance",
      "configurePreset": "profile-msvc"
    }
  ],
  "testPresets": [
    {
      "name": "test-defaults",
      "displayName": "Test (Default)",
      "description": "Preset for default test configuration",
      "output": {
        "outputOnFailure": true
      },
      "execution": {
        "noTestsAction": "error",
        "stopOnFailure": true
      },
      "hidden": true
    },
    {
      "name": "dev",
      "displayName": "Developer Mode",
      "description": "Preset for development activities and debugging",
      "configurePreset": "dev",
      "inherits": "test-defaults"
    },
    {
      "name": "ci",
      "displayName": "CI Mode",
      "description": "Preset for continuous integration",
      "configurePreset": "ci",
      "inherits": "test-defaults"
    },
    {
      "name": "profile",
      "displayName": "Profiler Mode",
      "description": "Preset for profiling performance",
      "configurePreset": "profile",
      "inherits": "test-defaults"
    },
    {
      "name": "dev-gcc",
      "displayName": "Developer Mode (GNU C/C++)",
      "description": "Preset for development activities and debugging",
      "configurePreset": "dev-gcc",
      "inherits": "test-defaults"
    },
    {
      "name": "asan-gcc",
      "displayName": "Developer Mode - ASAN (GNU C/C++)",
      "description": "Preset for development activities and debugging with address sanitizer",
      "configurePreset": "asan-gcc",
      "inherits": "test-defaults"
    },
    {
      "name": "lsan-gcc",
      "displayName": "Developer Mode - LSAN (GNU C/C++)",
      "description": "Preset for development activities and debugging with leak sanitizer",
      "configurePreset": "lsan-gcc",
      "inherits": "test-defaults"
    },
    {
      "name": "msan-gcc",
      "displayName": "Developer Mode - MSAN (GNU C/C++)",
      "description": "Preset for development activities and debugging with memory sanitizer",
      "configurePreset": "msan-gcc",
      "inherits": "test-defaults"
    },
    {
      "name": "tsan-gcc",
      "displayName": "Developer Mode - TSAN (GNU C/C++)",
      "description": "Preset for development activities and debugging with thread sanitizer",
      "configurePreset": "tsan-gcc",
      "inherits": "test-defaults"
    },
    {
      "name": "ubsan-gcc",
      "displayName": "Developer Mode - UBSAN (GNU C/C++)",
      "description": "Preset for development activities and debugging with undefined sanitizer",
      "configurePreset": "ubsan-gcc",
      "inherits": "test-defaults"
    },
    {
      "name": "ci-gcc",
      "displayName": "CI Mode (GNU C/C++)",
      "description": "Preset for continuous integration",
      "configurePreset": "ci-gcc",
      "inherits": "test-defaults"
    },
    {
      "name": "profile-gcc",
      "displayName": "Profiler Mode (GNU C/C++)",
      "description": "Preset for profiling performance",
      "configurePreset": "profile-gcc",
      "inherits": "test-defaults"
    },
    {
      "name": "dev-clang",
      "displayName": "Developer Mode (Clang (LLVM) C/C++)",
      "description": "Preset for development activities and debugging",
      "configurePreset": "dev-clang",
      "inherits": "test-defaults"
    },
    {
      "name": "asan-clang",
      "displayName": "Developer Mode - ASAN (Clang (LLVM) C/C++)",
      "description": "Preset for development activities and debugging with address sanitizer",
      "configurePreset": "asan-clang",
      "inherits": "test-defaults"
    },
    {
      "name": "lsan-clang",
      "displayName": "Developer Mode -LSAN  (Clang (LLVM) C/C++)",
      "description": "Preset for development activities and debugging with leak sanitizer",
      "configurePreset": "lsan-clang",
      "inherits": "test-defaults"
    },
    {
      "name": "msan-clang",
      "displayName": "Developer Mode - MSAN (Clang (LLVM) C/C++)",
      "description": "Preset for development activities and debugging with memory sanitizer",
      "configurePreset": "msan-clang",
      "inherits": "test-defaults"
    },
    {
      "name": "tsan-clang",
      "displayName": "Developer Mode - TSAN (Clang (LLVM) C/C++)",
      "description": "Preset for development activities and debugging with thread sanitizer",
      "configurePreset": "tsan-clang",
      "inherits": "test-defaults"
    },
    {
      "name": "ubsan-clang",
      "displayName": "Developer Mode -UBSAN (Clang (LLVM) C/C++)",
      "description": "Preset for development activities and debugging with undefined sanitizer",
      "configurePreset": "ubsan-clang",
      "inherits": "test-defaults"
    },
    {
      "name": "ci-clang",
      "displayName": "CI Mode (Clang (LLVM) C/C++)",
      "description": "Preset for continuous integration",
      "configurePreset": "ci-clang",
      "inherits": "test-defaults"
    },
    {
      "name": "profile-clang",
      "displayName": "Profiler Mode (Clang (LLVM) C/C++)",
      "description": "Preset for profiling performance",
      "configurePreset": "profile-clang",
      "inherits": "test-defaults"
    },
    {
      "name": "dev-msvc",
      "displayName": "Developer Mode (Microsoft Visual C/C++)",
      "description": "Preset for development activities and debugging",
      "configurePreset": "dev-msvc",
      "inherits": "test-defaults"
    },
    {
      "name": "ci-msvc",
      "displayName": "CI Mode (Microsoft Visual C/C++)",
      "description": "Preset for continuous integration",
      "configurePreset": "ci-msvc",
      "inherits": "test-defaults"
    },
    {
      "name": "profile-msvc",
      "displayName": "Profiler Mode (Microsoft Visual C/C++)",
      "description": "Preset for profiling performance",
      "configurePreset": "profile-msvc",
      "inherits": "test-defaults"
    }
  ],
  "packagePresets": [
    {
      "name": "dev",
      "displayName": "Developer Mode",
      "description": "Preset for development activities and debugging",
      "configurePreset": "dev"
    },
    {
      "name": "ci",
      "displayName": "CI Mode",
      "description": "Preset for continuous integration",
      "configurePreset": "ci"
    },
    {
      "name": "dev-gcc",
      "displayName": "Developer Mode (GNU C/C++)",
      "description": "Preset for development activities and debugging",
      "configurePreset": "dev-gcc"
    },
    {
      "name": "ci-gcc",
      "displayName": "CI Mode (GNU C/C++)",
      "description": "Preset for continuous integration",
      "configurePreset": "ci-gcc"
    },
    {
      "name": "dev-clang",
      "displayName": "Developer Mode (Clang (LLVM) C/C++)",
      "description": "Preset for development activities and debugging",
      "configurePreset": "dev-clang"
    },
    {
      "name": "ci-clang",
      "displayName": "CI Mode (Clang (LLVM) C/C++)",
      "description": "Preset for continuous integration",
      "configurePreset": "ci-clang"
    },
    {
      "name": "dev-msvc",
      "displayName": "Developer Mode (Microsoft Visual C/C++)",
      "description": "Preset for development activities and debugging",
      "configurePreset": "dev-msvc"
    },
    {
      "name": "ci-msvc",
      "displayName": "CI Mode (Microsoft Visual C/C++)",
      "description": "Preset for continuous integration",
      "configurePreset": "ci-msvc"
    }
  ],
  "workflowPresets": [
    {
      "name": "dev",
      "displayName": "Developer Mode",
      "description": "Preset for development activities and debugging",
      "steps": [
        {
          "type": "configure",
          "name": "dev"
        },
        {
          "type": "build",
          "name": "dev"
        },
        {
          "type": "test",
          "name": "dev"
        },
        {
          "type": "package",
          "name": "dev"
        }
      ]
    },
    {
      "name": "ci",
      "displayName": "CI Mode",
      "description": "Preset for continuous integration",
      "steps": [
        {
          "type": "configure",
          "name": "ci"
        },
        {
          "type": "build",
          "name": "ci"
        },
        {
          "type": "test",
          "name": "ci"
        },
        {
          "type": "package",
          "name": "ci"
        }
      ]
    },
    {
      "name": "profile",
      "displayName": "Profiler Mode",
      "description": "Preset for profiling performance",
      "steps": [
        {
          "type": "configure",
          "name": "profile"
        },
        {
          "type": "build",
          "name": "profile"
        },
        {
          "type": "test",
          "name": "profile"
        }
      ]
    },
    {
      "name": "dev-gcc",
      "displayName": "Developer Mode (GNU C/C++)",
      "description": "Preset for development activities and debugging",
      "steps": [
        {
          "type": "configure",
          "name": "dev-gcc"
        },
        {
          "type": "build",
          "name": "dev-gcc"
        },
        {
          "type": "test",
          "name": "dev-gcc"
        },
        {
          "type": "package",
          "name": "dev-gcc"
        }
      ]
    },
    {
      "name": "asan-gcc",
      "displayName": "Developer Mode - ASAN (GNU C/C++)",
      "description": "Preset for development activities and debugging with address sanitizer",
      "steps": [
        {
          "type": "configure",
          "name": "asan-gcc"
        },
        {
          "type": "build",
          "name": "asan-gcc"
        },
        {
          "type": "test",
          "name": "asan-gcc"
        }
      ]
    },
    {
      "name": "lsan-gcc",
      "displayName": "Developer Mode - LSAN (GNU C/C++)",
      "description": "Preset for development activities and debugging with leak sanitizer",
      "steps": [
        {
          "type": "configure",
          "name": "lsan-gcc"
        },
        {
          "type": "build",
          "name": "lsan-gcc"
        },
        {
          "type": "test",
          "name": "lsan-gcc"
        }
      ]
    },
    {
      "name": "msan-gcc",
      "displayName": "Developer Mode - MSAN (GNU C/C++)",
      "description": "Preset for development activities and debugging with memory sanitizer",
      "steps": [
        {
          "type": "configure",
          "name": "msan-gcc"
        },
        {
          "type": "build",
          "name": "msan-gcc"
        },
        {
          "type": "test",
          "name": "msan-gcc"
        }
      ]
    },
    {
      "name": "tsan-gcc",
      "displayName": "Developer Mode - TSAN (GNU C/C++)",
      "description": "Preset for development activities and debugging with thread sanitizer",
      "steps": [
        {
          "type": "configure",
          "name": "tsan-gcc"
        },
        {
          "type": "build",
          "name": "tsan-gcc"
        },
        {
          "type": "test",
          "name": "tsan-gcc"
        }
      ]
    },
    {
      "name": "ubsan-gcc",
      "displayName": "Developer Mode - UBSAN (GNU C/C++)",
      "description": "Preset for development activities and debugging with undefined sanitizer",
      "steps": [
        {
          "type": "configure",
          "name": "ubsan-gcc"
        },
        {
          "type": "build",
          "name": "ubsan-gcc"
        },
        {
          "type": "test",
          "name": "ubsan-gcc"
        }
      ]
    },
    {
      "name": "ci-gcc",
      "displayName": "CI Mode (Clang (LLVM) C/C++)",
      "description": "Preset for continuous integration",
      "steps": [
        {
          "type": "configure",
          "name": "ci-gcc"
        },
        {
          "type": "build",
          "name": "ci-gcc"
        },
        {
          "type": "test",
          "name": "ci-gcc"
        },
        {
          "type": "package",
          "name": "ci-gcc"
        }
      ]
    },
    {
      "name": "dev-clang",
      "displayName": "Developer Mode (Clang (LLVM) C/C++)",
      "description": "Preset for development activities and debugging",
      "steps": [
        {
          "type": "configure",
          "name": "dev-clang"
        },
        {
          "type": "build",
          "name": "dev-clang"
        },
        {
          "type": "test",
          "name": "dev-clang"
        },
        {
          "type": "package",
          "name": "dev-clang"
        }
      ]
    },
    {
      "name": "asan-clang",
      "displayName": "Developer Mode - ASAN (Clang (LLVM) C/C++)",
      "description": "Preset for development activities and debugging with address sanitizer",
      "steps": [
        {
          "type": "configure",
          "name": "asan-clang"
        },
        {
          "type": "build",
          "name": "asan-clang"
        },
        {
          "type": "test",
          "name": "asan-clang"
        }
      ]
    },
    {
      "name": "lsan-clang",
      "displayName": "Developer Mode - LSAN (Clang (LLVM) C/C++)",
      "description": "Preset for development activities and debugging with leak sanitizer",
      "steps": [
        {
          "type": "configure",
          "name": "lsan-clang"
        },
        {
          "type": "build",
          "name": "lsan-clang"
        },
        {
          "type": "test",
          "name": "lsan-clang"
        }
      ]
    },
    {
      "name": "msan-clang",
      "displayName": "Developer Mode - MSAN (Clang (LLVM) C/C++)",
      "description": "Preset for development activities and debugging with memory sanitizer",
      "steps": [
        {
          "type": "configure",
          "name": "msan-clang"
        },
        {
          "type": "build",
          "name": "msan-clang"
        },
        {
          "type": "test",
          "name": "msan-clang"
        }
      ]
    },
    {
      "name": "tsan-clang",
      "displayName": "Developer Mode - TSAN (Clang (LLVM) C/C++)",
      "description": "Preset for development activities and debugging with thread sanitizer",
      "steps": [
        {
          "type": "configure",
          "name": "tsan-clang"
        },
        {
          "type": "build",
          "name": "tsan-clang"
        },
        {
          "type": "test",
          "name": "tsan-clang"
        }
      ]
    },
    {
      "name": "ubsan-clang",
      "displayName": "Developer Mode - UBSAN (Clang (LLVM) C/C++)",
      "description": "Preset for development activities and debugging with undefined sanitizer",
      "steps": [
        {
          "type": "configure",
          "name": "ubsan-clang"
        },
        {
          "type": "build",
          "name": "ubsan-clang"
        },
        {
          "type": "test",
          "name": "ubsan-clang"
        }
      ]
    },
    {
      "name": "ci-clang",
      "displayName": "CI Mode (Clang (LLVM) C/C++)",
      "description": "Preset for continuous integration",
      "steps": [
        {
          "type": "configure",
          "name": "ci-clang"
        },
        {
          "type": "build",
          "name": "ci-clang"
        },
        {
          "type": "test",
          "name": "ci-clang"
        },
        {
          "type": "package",
          "name": "ci-clang"
        }
      ]
    },
    {
      "name": "profile-clang",
      "displayName": "Profiler Mode (Clang (LLVM) C/C++)",
      "description": "Preset for profiling performance",
      "steps": [
        {
          "type": "configure",
          "name": "profile-clang"
        },
        {
          "type": "build",
          "name": "profile-clang"
        },
        {
          "type": "test",
          "name": "profile-clang"
        }
      ]
    },
    {
      "name": "dev-msvc",
      "displayName": "Developer Mode (Microsoft Visual C/C++)",
      "description": "Preset for development activities and debugging",
      "steps": [
        {
          "type": "configure",
          "name": "dev-msvc"
        },
        {
          "type": "build",
          "name": "dev-msvc"
        },
        {
          "type": "test",
          "name": "dev-msvc"
        },
        {
          "type": "package",
          "name": "dev-msvc"
        }
      ]
    },
    {
      "name": "ci-msvc",
      "displayName": "CI Mode (Microsoft Visual C/C++)",
      "description": "Preset for continuous integration",
      "steps": [
        {
          "type": "configure",
          "name": "ci-msvc"
        },
        {
          "type": "build",
          "name": "ci-msvc"
        },
        {
          "type": "test",
          "name": "ci-msvc"
        },
        {
          "type": "package",
          "name": "ci-msvc"
        }
      ]
    },
    {
      "name": "profile-msvc",
      "displayName": "Profiler Mode (Microsoft Visual C/C++)",
      "description": "Preset for profiling performance",
      "steps": [
        {
          "type": "configure",
          "name": "profile-msvc"
        },
        {
          "type": "build",
          "name": "profile-msvc"
        },
        {
          "type": "test",
          "name": "profile-msvc"
        }
      ]
    },
    {
      "name": "doc",
      "displayName": "API Document Generator",
      "description": "Preset for generating API documentation",
      "steps": [
        {
          "type": "configure",
          "name": "doc"
        },
        {
          "type": "build",
          "name": "doc"
        }
      ]
    }
  ]
}
