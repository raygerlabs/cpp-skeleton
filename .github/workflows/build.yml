name: build

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

env:
  BUILD_TYPE: Release

jobs:
  build:
    runs-on: ${{ matrix.vm }}
    timeout-minutes: 30

    strategy:
      fail-fast: false
      matrix:
       include:
         - name: linux
           vm: ubuntu-latest
           os: Linux
           arch: x86_64
           compiler: gcc
           compiler_version: 9
           compiler_libcxx: libstdc++11

         - name: macos
           vm: macos-latest
           os: Macos
           arch: x86_64
           compiler: apple-clang
           compiler_version: 13.0
           compiler_libcxx: libc++

         - name: windows
           vm: windows-latest
           os: Windows
           arch: x86_64
           compiler: "Visual Studio"
           compiler_version: 17

    steps:
      - name: Checkout project
        uses: actions/checkout@v2

      - name: Retrieve branch name
        id: current_branch
        run: |
          echo "::set-output name=name::$(echo ${GITHUB_REF#refs/heads/})"

      - name: Cache Conan packages # For speeding up the build, copy the master branch
        uses: actions/cache@v2
        with:
          path: ~/.conan
          key: conan-package-cache-${{ steps.current_branch.outputs.name }}
          restore-keys: |
            conan-package-cache-master

      - name: Setup Python environment
        uses: actions/setup-python@v2

      - name: Install/Upgrade Conan
        shell: bash
        run: |
          pip3 install --upgrade conan
          conan --version
          conan user
          conan profile new --force default
          conan profile update settings.os="${{ matrix.os }}" default
          conan profile update settings.os_build="${{ matrix.os }}" default
          conan profile update settings.arch="${{ matrix.arch }}" default
          conan profile update settings.arch_build="${{ matrix.arch }}" default
          conan profile update settings.compiler="${{ matrix.compiler }}" default
          conan profile update settings.compiler.version="${{ matrix.compiler_version }}" default
          conan profile update settings.compiler.libcxx="${{ matrix.compiler_libcxx }}" default
          conan profile show default
      - name: Remove invalid Conan profile setting (Visual Studio)
        if: matrix.compiler == 'Visual Studio'
        run: |
          conan profile remove settings.compiler.libcxx default

      - name: Create build directory
        run: |
          cmake -E make_directory ${{ github.workspace }}/build

      - name: Configure
        working-directory: ${{ github.workspace }}/build
        run: |
          conan install .. -s build_type=${{ env.BUILD_TYPE }} -pr:b default --build missing

      - name: Build
        working-directory: ${{ github.workspace }}/build
        run: |
          conan build ..

      - name: Package
        working-directory: ${{ github.workspace }}/build
        run: |
          conan package ..

      - name: Retrieve artifact information
        working-directory: ${{ github.workspace }}/build
        id: current_artifact
        run: |
          echo "::set-output name=name::$(cat package_info.txt)"

      - name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: ${{ steps.current_artifact.outputs.name }}
          path: ./build/${{ steps.current_artifact.outputs.name }}
