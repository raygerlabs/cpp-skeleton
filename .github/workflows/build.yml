name: build

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:
    runs-on: ${{ matrix.os }}-latest
    timeout-minutes: 30

    strategy:
      fail-fast: true
      matrix:
        include:
          - os: ubuntu
          - os: macos
          - os: windows

    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-python@v2

      - name: Extract branch name
        shell: bash
        run: |
          echo "##[set-output name=name;]$(echo ${GITHUB_REF#refs/heads/})"
        id: branch_data

      - name: Cache conan packages
        uses: actions/cache@v2
        with:
          path: ~/.conan
          key: conan-package-cache-${{ steps.branch_data.outputs.name }}
          restore-keys: |
            conan-package-cache-master

      - name: Install conan
        run: |
          pip3 install conan

      - name: Create build directory
        run: |
          cmake -E make_directory ${{ github.workspace }}/build

      - name: Install dependencies
        run: |
          conan install .. -pr:b default --build missing
        working-directory: ${{ github.workspace }}/build

      - name: Execute build
        run: |
          conan build ..
        working-directory: ${{ github.workspace }}/build

      - name: Create artifact
        run: |
          conan package ..
        working-directory: ${{ github.workspace }}/build

      - name: Extract artifact information
        shell: bash
        run: |
          echo "::set-output name=name::$(cat artifact_name.txt)"
          echo "::set-output name=path::$(cat artifact_path.txt)"
        id: artifact_data
        working-directory: ${{ github.workspace }}/build

      - name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: ${{ steps.artifact_data.outputs.name }}
          path: ${{ steps.artifact_data.outputs.path }}
