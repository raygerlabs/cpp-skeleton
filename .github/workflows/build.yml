name: build

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

env:
  BUILD_TYPE: Release

jobs:
  build:
    runs-on: ${{ matrix.os }}-latest
    timeout-minutes: 30

    strategy:
      fail-fast: true
      matrix:
        os: [ ubuntu, macos, windows ]

    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
      - run: pip3 install conan
      - if: runner.os == 'Linux'
        run: |
          conan profile new default --detect
          conan profile update settings.compiler.libcxx=libstdc++11 default
      - run: conan install . -if install -s build_type=${{ env.BUILD_TYPE }} -pr:b default --build missing
      - run: conan build . -bf build -if install
      - run: conan package . -pf package -bf build -if install
      - id: asset_info
        run: |
          echo "::set-output name=asset_name::$(cat ./build/asset_name.txt)"
          echo "::set-output name=asset_path::$(cat ./build/asset_path.txt)"
      - uses: actions/upload-artifact@v3
        with:
          name: ${{ steps.asset_info.outputs.asset_name }}
          path: ${{ steps.asset_info.outputs.asset_path }}
