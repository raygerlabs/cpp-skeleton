name: build

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

env:
  BUILD_TYPE: Release
  CONAN_V2_MODE: true

jobs:
  build:
    runs-on: ${{ matrix.os }}-latest
    timeout-minutes: 30

    strategy:
      fail-fast: false
      matrix:
        os: [ ubuntu, macos, windows ]

    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
      - run: pip3 install conan
      - run: cmake -E make_directory ${{ github.workspace }}/build
      - working-directory: ${{ github.workspace }}/build
        run: conan install .. -s build_type=${{ env.BUILD_TYPE }} -pr:b default --build missing
      - working-directory: ${{ github.workspace }}/build
        run: cmake -DCMAKE_BUILD_TYPE=${{ env.BUILD_TYPE }} ..
      - working-directory: ${{ github.workspace }}/build
        run: cmake --build . --config ${{ env.BUILD_TYPE }}
      - working-directory: ${{ github.workspace }}/build
        run: ctest -VV -C ${{ env.BUILD_TYPE }}
      - working-directory: ${{ github.workspace }}/build
        run: cmake --install . --config ${{ env.BUILD_TYPE }} --prefix install
      - working-directory: ${{ github.workspace }}/build
        run: cpack
      - working-directory: ${{ github.workspace }}/build
        id: this_archive
        run: echo "##[set-output name=name;]$(cat archive_name.txt)"
      - uses: actions/upload-artifact@v2
        with:
          name: ${{ steps.this_archive.outputs.name }}
          path: ${{ github.workspace }}/build/${{ steps.this_archive.outputs.name }}
