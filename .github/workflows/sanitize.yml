name: sanitize

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  BUILD_TYPE: Debug

jobs:
  sanitize:
    runs-on: {{ matrix.vm }}

    timeout-minutes: 5

    strategy:
      fail-fast: false

      matrix:
       include:
         - name: linux_gcc
           vm: ubuntu-latest
           compiler: "gcc"

         - name: linux_clang
           vm: ubuntu-latest
           compiler: "clang"

         - name: mac_gcc
           vm: macos-latest
           compiler: "gcc"

         - name: macos_clang
           vm: macos-latest
           compiler: "clang"

    steps:
      - name: Checkout project
        uses: actions/checkout@v2

      - name: Get current branch
        id: current_branch
        run: echo "::set-output name=name::$(echo ${GITHUB_REF#refs/heads/})"

      - name: Cache Conan
        uses: actions/cache@v2
        with:
          path: ~/.conan
          key: conan-package-cache-${{ steps.current_branch.outputs.name }}
          restore-keys: |
            conan-package-cache-master

      - name: Setup Python environment
        uses: actions/setup-python@v2

      - name: Install/Upgrade Conan
        run: |
          pip3 install --upgrade conan
          conan --version
          conan use r
          conan profile new --force default
          conan profile show default

      - name: Install dependencies
        run: conan install -of build -s build_type=${{ env.BUILD_TYPE }} -pr:b=default -b=missing ${{ github.workspace }}

      - name: Configure
        run: cmake --preset san-${{ matrix.compiler }} ${{ github.workspace }}

      - name: Execute
        run: cmake --build --preset san-${{ matrix.compiler }} ${{ github.workspace }}
