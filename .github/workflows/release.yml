name: release

on:
  push:
    tags:
      - 'v*'

env:
  BUILD_TYPE: Release

jobs:
  build-artifact:
    runs-on: ${{ matrix.os }}
    timeout-minutes: 30

    strategy:
      fail-fast: true
      matrix:
        include:
          - os: ubuntu-latest
            asset_name: project-init-cpp-linux-x86_64.zip
            asset_path: package/archive/project-init-cpp-linux-x86_64.tar.gz
          - os: macos-latest
            asset_name: project-init-cpp-macos-x86_64.zip
            asset_path: package/archive/project-init-cpp-macos-x86_64.tar.gz
          - os: windows-latest
            asset_name: project-init-cpp-windows-x86_64.zip
            asset_path: package/archive/project-init-cpp-windows-x86_64.zip

    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
      - run: pip3 install conan
      - if: runner.os == 'Linux'
        run: |
          conan profile new default --detect
          conan profile update settings.compiler.libcxx=libstdc++11 default
      - run: conan install . -if install -s build_type=${{ env.BUILD_TYPE }} -pr:b default --build missing
      - run: conan build . -bf build -if install
      - run: conan package . -pf package -bf build -if install
      - uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.asset_name }}
          path: ${{ matrix.asset_path }}

  create-release:
    runs-on: ubuntu-latest
    needs:
      - build-artifact
    steps:
      - uses: actions/checkout@v2
      - uses: actions/create-release@v1
        id: create-release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: ${{ github.ref }}
          body: ${{ env.BUILD_TYPE }}
          draft: false
          prerelease: false
      - run: echo '${{ steps.create-release.outputs.upload_url }}' > upload_url.txt
      - uses: actions/upload-artifact@v2
        with:
          name: create-release
          path: upload_url.txt

  upload-release:
    runs-on: ubuntu-latest
    needs: create-release
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            asset_name: project-init-cpp-linux-x86_64.zip
            asset_content_type: application/gzip
          - os: macos-latest
            asset_name: project-init-cpp-macos-x86_64.zip
            asset_content_type: application/gzip
          - os: windows-latest
            asset_name: project-init-cpp-windows-x86_64.zip
            asset_content_type: application/zip
    steps:
    - uses: actions/download-artifact@v2
      with:
        name: ${{ matrix.asset_name }}
    - uses: actions/download-artifact@v2
      with:
        name: create-release
    - id: release-retrieval
      run: echo "::set-output name=upload_url::$(cat upload_url.txt)"
    - uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.release-retrieval.outputs.upload_url }}
        asset_path: ${{ matrix.asset_name }}
        asset_name: ${{ matrix.asset_name }}
        asset_content_type: ${{ matrix.asset_content_type }}
