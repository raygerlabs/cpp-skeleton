name: release

on:
  push:
    tags:
      - 'v*'

env:
  BUILD_TYPE: Release

jobs:
  build-release:
    runs-on: ${{ matrix.os }}-latest
    timeout-minutes: 30

    strategy:
      fail-fast: true
      matrix:
        os: [ ubuntu, macos, windows ]

    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
      - run: pip3 install conan
      - id: branch_data
        shell: bash
        run: echo "::set-output name=name::$(echo ${GITHUB_REF#refs/heads/})"
      - uses: actions/cache@v2
        with:
          path: ~/.conan
          key: conan-package-cache-${{ steps.branch_data.outputs.name }}
          restore-keys: |
            conan-package-cache-master
      - run: cmake -E make_directory ${{ github.workspace }}/build
      - working-directory: ${{ github.workspace }}/build
        run: conan install .. -pr:b default --build missing
      - working-directory: ${{ github.workspace }}/build
        run: conan build ..
      - working-directory: ${{ github.workspace }}/build
        run: conan package ..
      - id: archive_data
        working-directory: ${{ github.workspace }}/build
        shell: bash
        run: |
          echo "::set-output name=name::$(cat archive_name.txt)"
          echo "::set-output name=path::$(cat archive_path.txt)"
      - uses: actions/upload-artifact@v3
        with:
          name: ${{ steps.archive_data.outputs.name }}
          path: ${{ steps.archive_data.outputs.path }}
      - uses: actions/upload-artifact@v3
        with:
          name: archive_name_${{ matrix.os }}
          path: ./build/archive_name.txt

  create-release:
    runs-on: ubuntu-latest
    needs:
      - build-release
    steps:
      - uses: actions/create-release@v1
        id: release_data
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: ${{ github.ref }}
          body: ${{ env.BUILD_TYPE }}
          draft: false
          prerelease: false
      - run: echo '${{ steps.release_data.outputs.upload_url }}' > upload_url.txt
      - uses: actions/upload-artifact@v2
        with:
          name: upload_url
          path: upload_url.txt

  upload-release:
    runs-on: ubuntu-latest
    needs: create-release
    strategy:
      matrix:
        os: [ ubuntu, macos, windows ]

    steps:
    - uses: actions/download-artifact@v2
      with:
        name: archive_name_${{ matrix.os }}
    - uses: actions/download-artifact@v2
      with:
        name: upload_url
    - id: release_data
      run: echo "::set-output name=upload_url::$(cat upload_url.txt)"
    - id: archive_data
      run: |
        echo "::set-output name=name::$(cat archive_name_${{ matrix_os }})"
    - uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.release_data.outputs.upload_url }}
        asset_name: ${{ steps.archive_data.outputs.name }}
        asset_path: ${{ steps.archive_data.outputs.name }}
        asset_content_type: application/octet-stream
